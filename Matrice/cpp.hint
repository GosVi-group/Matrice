// Hint files help the Visual Studio IDE interpret Visual C++ identifiers
// such as names of functions and macros.
// For more information see https://go.microsoft.com/fwlink/?linkid=865984
#define MATRICE_HOST_FINL
#define _IF_WITHIN_RANGE(_OP) if (y-_Mytraits::border_size::lower>=0 && x-_Mytraits::border_size::lower>=0 && y+_Mytraits::border_size::upper<_Rows && x+_Mytraits::border_size::upper<_Cols) _OP; else _Mycur(r,c) = zero<value_type>;
#define DGE_MATRICE_BEGIN namespace dgelom {
#define _DETAIL_BEGIN namespace detail {
#define MATRICE_HOST_INL
#define _MATRICE_DEFEXP_EWISEBOP(NAME) template<typename _Ty> struct _Ewise_##NAME { enum {flag = ewise}; using category = tag::_Ewise_##NAME##_tag; template<typename _Uy = _Ty> MATRICE_GLOBAL_FINL constexpr auto operator() (const _Ty& _Left, const _Uy& _Right) const { return (NAME(_Left, _Right)); }};
#define _MATRICE_DEFEXP_EWISEUOP(NAME) template<typename _Ty> struct _Ewise_##NAME { enum {flag = ewise}; using category = tag::_Ewise_##NAME##_tag; MATRICE_GLOBAL_FINL constexpr auto operator() (const _Ty& _Val) const { return (NAME(_Val)); }};
#define MATRICE_GLOBAL_INL
#define MATRICE_SIMD_ARCH
#define MATRICE_GLOBAL_FINL
